name: schedule-update

on:
  workflow_dispatch:
  schedule:
    # 每小时整点执行
    - cron: "0 * * * *"

jobs:
  build:
    runs-on: ubuntu-latest
    
    # 授予工作流对仓库内容的写入权限，这是修复 git push 403 错误的关键
    permissions:
      contents: write

    env:
      TZ: Asia/Shanghai

    steps:
      # 克隆仓库
      - name: Clone repo
        uses: actions/checkout@v4

      # 配置python环境
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: 'pip'

      # 安装python依赖
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # 配置git
      - name: Config git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          # 注意：当添加了 permissions 后，就不再需要手动设置 remote-url 了， checkout Action 会自动处理好 GITHUB_TOKEN 的权限
          # git remote set-url origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git pull --rebase

      # 运行
      - name: Run python
        run: python -u main.py
        env:
          ENABLE_DEBUG_PRINT: true

      # 更新仓库（已优化）
      - name: Update repo
        run: |
          # 检查是否有文件变动。如果没有变动，则不执行提交，避免产生空的 commit
          if ! git diff-index --quiet HEAD; then
            git add .
            git commit -m "update by github action"
            git push -u origin main
          else
            echo "No changes to commit."
          fi
